<?xml version="1.0"?>
<robot name="litebot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- Defining the colors used in this robot -->
  <material name="Black">
      <color rgba="0 0 0 1"/>
  </material>

  <material name="White">
      <color rgba="1 1 1 1"/>
  </material>

  <material name="Blue">
      <color rgba="0 0 1 1"/>
  </material>

  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <property name="M_PI" value="3.1415926535897931" />

  <!-- Main body length, width, height and mass -->
  <property name="base_height" value="0.01" /> 
  <property name="base_width"  value="0.2" />
  <property name="base_length" value="0.3" />
  <property name="base_mass"   value="0.5" /> 

  <!-- Caster radius and mass -->
  <property name="caster_radius" value="0.02" /> 
  <property name="caster_mass" value="0.5" /> 
  <property name="caster_joint_origin_x"  value="-0.12" />

  <!-- Wheel radius, height and mass -->
  <property name="wheel_radius" value="0.04" /> 
  <property name="wheel_height" value="0.02" />
  <property name="wheel_mass"   value="0.5" />

  <!-- Controller length, width, height and mass -->
  <property name="controller_width"     value="0.08" />
  <property name="controller_length"    value="0.14" />
  <property name="controller_height"    value="0.03" /> 
  <property name="controller_mass"      value="0.05" />
  <property name="controller_joint_origin_x"  value="-0.07" />

  <!-- Macro for inertia matrix -->
  <xacro:macro name="sphere_inertial_matrix" params="m r">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
              iyy="${2*m*r*r/5}" iyz="0" 
              izz="${2*m*r*r/5}" />
      </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertial_matrix" params="m r h">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
      </inertial>
  </xacro:macro>

  <xacro:macro name="box_inertial_matrix" params="m w h d">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${m*(h*h+d*d)/12}" ixy = "0" ixz = "0"
              iyy="${m*(w*w+d*d)/12}" iyz = "0"
              izz="${m*(w*w+h*h)/12}" /> 
      </inertial>
  </xacro:macro>

  <!-- Macro for wheel joint -->
  <xacro:macro name="wheel" params="lr translateY"> <!-- lr: left, right -->
      <link name="wheel_${lr}_link">
          <visual>
              <origin xyz="0 0 0" rpy="${M_PI/2} 0  0 " /> 
              <geometry>
                  <cylinder length="${wheel_height}" radius="${wheel_radius}" />
              </geometry>
              <material name="Black" />
          </visual>
          <collision>
              <origin xyz="0 0 0" rpy="${M_PI/2} 0 0 " />
              <geometry>
                  <cylinder length="${wheel_height}" radius="${wheel_radius}" />
              </geometry>
          </collision>
          <cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
      </link>

      <gazebo reference="wheel_${lr}_link">
          <material>Gazebo/Black</material>
      </gazebo>

      <joint name="base_to_wheel_${lr}_joint" type="continuous">
          <parent link="base_link"/>
          <child link="wheel_${lr}_link"/>
          <origin xyz="${base_width/4} ${translateY * base_width/2} 0" rpy="0 0 0" /> 
          <axis xyz="0 1 0" rpy="0  0" />
      </joint>

      <!-- Transmission is important to link the joints and the controller -->
      <transmission name="wheel_${lr}_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="base_to_wheel_${lr}_joint">
		  <hardwareInterface>VelocityJointInterface</hardwareInterface>
		</joint>
		<actuator name="wheel_${lr}_joint_motor">
		  <hardwareInterface>VelocityJointInterface</hardwareInterface>
		  <mechanicalReduction>1</mechanicalReduction>
		</actuator>
      </transmission>
  </xacro:macro>

  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
      <inertial>
          <mass value="0.0001" />
          <origin xyz="0 0 0" />
          <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
              iyy="0.0001" iyz="0.0" 
              izz="0.0001" />
      </inertial>
      <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
              <box size="0.001 0.001 0.001" />
          </geometry>
      </visual>
  </link>

  <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" />
      <parent link="base_footprint"/>
      <child link="base_link" />
  </joint>

  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
      <box_inertial_matrix  m="${base_mass}" w="${base_width}" h="${base_height}" d="${base_length}" />
      <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
              <box size="${base_length} ${base_width} ${base_height}"/>
          </geometry>
          <material name="White" />
      </visual>  
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0 " />
          <geometry>
              <box size="${base_length} ${base_width} ${base_height}"/>
          </geometry>
      </collision>     
  </link>
  <gazebo reference="base_link">
      <material>Gazebo/White</material>
  </gazebo>

  <!--Caster back  -->
  <link name="caster_link">
      <visual>
          <origin xyz="0 0 0 " rpy="0 0 0" /> 
          <geometry>
              <sphere radius="${caster_radius}" />
          </geometry>
          <material name="Black" />
      </visual>  
      <collision>
          <geometry>
              <sphere radius="${caster_radius}" />
          </geometry>
          <origin xyz="0 0 0 " rpy="0 0 0" /> 
      </collision>      
      <sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" />
  </link>

  <gazebo reference="caster_link">
      <material>Gazebo/Black</material>
  </gazebo>

  <joint name="base_to_caster_joint" type="fixed">
      <parent link="base_link"/>
      <child link="caster_link"/>
      <origin xyz="${caster_joint_origin_x} 0 ${-caster_radius}" rpy="0 0 0"/>
  </joint>

  <!-- Wheel Definitions -->
  <wheel lr="right"  translateY="1" />
  <wheel lr="left"  translateY="-1" />

  <link name="controller_link">
      <visual>
          <geometry>
              <box size="${controller_width} ${controller_length} ${controller_height}"/>
          </geometry>
          <origin rpy="0 0 0" xyz="0 0 0"/>
          <material name="Blue" />
      </visual>
      <collision>
          <origin rpy="0 0 0" xyz="0 0 0"/>
          <geometry>
              <box size="${controller_width} ${controller_length} ${controller_height}"/>
          </geometry>
      </collision> 
      <box_inertial_matrix  m="${controller_mass}" w="${controller_width}" h="${controller_height}" d="${controller_length}" />
  </link>

  <gazebo reference="controller_link">
      <material>Gazebo/Blue</material>
  </gazebo>

  <joint name="base_to_controller_joint" type="fixed">
      <parent link="base_link"/>
      <child link="controller_link"/>
      <origin rpy="0 0 0" xyz="${controller_joint_origin_x} 0 ${base_height/2+controller_height/2}"/>
      <axis rpy="0 0 0" xyz="0 0 0"/>
  </joint>

  <!-- ros control plugin  -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

</robot>
